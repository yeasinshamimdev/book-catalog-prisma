generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String @id @default(uuid())
  name String
  password String
  email Status
  role Role
  contactNo String
  address String
  profileImg String
  reviewAndRatings ReviewAndRating[]
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Category {
  id String @id @default(uuid())
  title String
  books Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("category")
}

model Book{
  id String @id @default(uuid())
  title String
  author String
  price Float
  genre String
  publicationDate DateTime
  categoryId String
  category Category @relation(fields: [categoryId], references: [id])
  reviewAndRatings ReviewAndRating[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("book")
}

model ReviewAndRating {
  id String @id @default(uuid())
  review String
  rating Int
  userId String
  bookId String
  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("review_and_rating")
}

model Order {
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  orderedBooks Json
  status Status @default(pending)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("order")
}

enum Role {
  admin
  customer
}

enum Status {
  pending
  shipped
  delivered
}
